{"title":"mm-groundingdino-趋动云","uid":"8752c09004c1dd1e2251bd40de2925ba","slug":"mm-groundingdino-趋动云","date":"2025-04-17T16:56:27.429Z","updated":"2025-04-17T17:42:15.694Z","comments":true,"path":"api/articles/mm-groundingdino-趋动云.json","keywords":null,"cover":"static/img/covers/黄泉.jpg","content":"<p>在没有服务器时使用驱动云进行模型选择。</p>\n<h2 id=\"配置环境\"><a href=\"#配置环境\" class=\"headerlink\" title=\"配置环境\"></a>配置环境</h2><p>两个一样的文档： <a href=\"https://mmdetection.readthedocs.io/zh-cn/latest/get_started.html#id1\">mmdetection官方参考连接</a>  、<a href=\"https://github.com/open-mmlab/mmdetection/blob/main/docs/zh_cn/get_started.md#%E5%BC%80%E5%A7%8B%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5\">github文档</a></p>\n<h3 id=\"趋动云镜像\"><a href=\"#趋动云镜像\" class=\"headerlink\" title=\"趋动云镜像\"></a>趋动云镜像</h3><p>趋动云镜像 CUDA12.1 python&#x3D;&#x3D;3.11</p>\n<p>模型选择3个，<code>bert-base-uncased</code>、<code>grounding_dino_swin-t_pretrain_obj365_goldg_grit9m_v3det_20231204_095047-b448804b</code>、<code>swin_tiny_patch4_window7_224.pth</code></p>\n<h3 id=\"安装MMDetection-环境\"><a href=\"#安装MMDetection-环境\" class=\"headerlink\" title=\"安装MMDetection 环境\"></a>安装MMDetection 环境</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1. 先安装torch包，后面的安装依赖torch。</span></span><br><span class=\"line\">pip install torch==2.4.1 torchvision==0.19.1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2. 安装mim, 然后使用min安装mmengine和mmcv</span></span><br><span class=\"line\">pip install -U openmim # 会有一个pip 依赖Error，但不影响使用</span><br><span class=\"line\">mim install mmengine</span><br><span class=\"line\">mim install &quot;mmcv&gt;=2.0.0&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">3. 从源码安装MMDetection</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">趋动云只有内网环境，克隆不了github上的较大仓库，通过本地上传的方式</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">git <span class=\"built_in\">clone</span> https://github.com/open-mmlab/mmdetection.git</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">unzip mmdetection.zip</span></span><br><span class=\"line\">cd mmdetection</span><br><span class=\"line\">pip install -v -e .</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">&quot;-v&quot;</span> 指详细说明，或更多的输出</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">&quot;-e&quot;</span> 表示在可编辑模式下安装项目，因此对代码所做的任何本地修改都会生效，从而无需重新安装。</span></span><br></pre></td></tr></table></figure>\n\n<p>修改版本断言</p>\n<p>将<code>/gemini/code/mmdetection/mmdet/__init__.py</code>中对<code>mmcv_version</code>的断言注释掉。”mmcv&gt;&#x3D;2.0.0”安装的是2.2.0版本，但断言又要小于2.2.0，可能是一个bug吧，很久都没有修。</p>\n<h3 id=\"验证MMDetection-环境\"><a href=\"#验证MMDetection-环境\" class=\"headerlink\" title=\"验证MMDetection 环境\"></a>验证MMDetection 环境</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">下载配置文件和模型权重文件</span></span><br><span class=\"line\">mim download mmdet --config rtmdet_tiny_8xb32-300e_coco --dest .</span><br><span class=\"line\"></span><br><span class=\"line\">python demo/image_demo.py demo/demo.jpg rtmdet_tiny_8xb32-300e_coco.py --weights rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth --device cpu</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">你会在当前文件夹中的 outputs/vis 文件夹中看到一个新的图像 demo.jpg，图像中包含有网络预测的检测框。</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"安装grounding-dino环境\"><a href=\"#安装grounding-dino环境\" class=\"headerlink\" title=\"安装grounding_dino环境\"></a>安装grounding_dino环境</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在根目录下，<span class=\"built_in\">cd</span> <span class=\"variable\">$MMDETROOT</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">pip install -r requirements/multimodal.txt</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">驱动云的源有问题，需要使用清华源</span></span><br><span class=\"line\">pip install -r requirements/multimodal.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install emoji ddd-dataset</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装lvis的api</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">pip install git+https://github.com/lvis-dataset/lvis-api.git</span></span><br><span class=\"line\">pip install lvis</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"准备BERT权重\"><a href=\"#准备BERT权重\" class=\"headerlink\" title=\"准备BERT权重\"></a>准备BERT权重</h4><p>直接在趋动云的模型中选择”bert-base-uncased”。</p>\n<p>修改<code>configs/mm_grounding_dino/grounding_dino_swin-t_pretrain_obj365.py</code> 中的<code>lang_model_name = &#39;/gemini/pretrain/&#39;</code></p>\n<p>注释掉使用pretrained进行init的配置，46行。下载的权重文件中应该包含了SwinTransformer的权重。</p>\n<h4 id=\"准备NLTK-权重\"><a href=\"#准备NLTK-权重\" class=\"headerlink\" title=\"准备NLTK 权重\"></a>准备NLTK 权重</h4><p>NLTK作用：推理时可能会进行名词短语提取。</p>\n<p>这个下载速度慢得很，本地下载好后上传到趋动云，再解压到指定位置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /gemini/code, 将压缩包解压到指定目录</span></span><br><span class=\"line\">unzip nltk_data.zip -d ~/</span><br></pre></td></tr></table></figure>\n\n<p>修改调用nltk的代码，注释掉mmdet&#x2F;models&#x2F;detector&#x2F;glip.py 里面：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将下载内容注释掉</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">import</span> nltk</span><br><span class=\"line\">    <span class=\"comment\">#nltk.download(&#x27;punkt&#x27;, download_dir=&#x27;~/nltk_data&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\">#nltk.download(&#x27;averaged_perceptron_tagger&#x27;, download_dir=&#x27;~/nltk_data&#x27;)</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> ImportError:</span><br><span class=\"line\">    <span class=\"keyword\">raise</span> RuntimeError(<span class=\"string\">&#x27;nltk is not installed, please install it by: &#x27;</span></span><br><span class=\"line\">                           <span class=\"string\">&#x27;pip install nltk.&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"推理测试\"><a href=\"#推理测试\" class=\"headerlink\" title=\"推理测试\"></a>推理测试</h3><p>准备Grounding DINO-T 模型权重</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget load_from = <span class=\"string\">&#x27;https://download.openmmlab.com/mmdetection/v3.0/mm_grounding_dino/grounding_dino_swin-t_pretrain_obj365_goldg_grit9m_v3det/grounding_dino_swin-t_pretrain_obj365_goldg_grit9m_v3det_20231204_095047-b448804b.pth&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>准备images&#x2F;animals.png这张<a href=\"https://github.com/microsoft/X-Decoder/blob/main/inference_demo/images/animals.png\">图片</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python demo/image_demo.py images/animals.png \\</span><br><span class=\"line\">        configs/mm_grounding_dino/grounding_dino_swin-t_pretrain_obj365.py \\</span><br><span class=\"line\">        --weights grounding_dino_swin-t_pretrain_obj365_goldg_grit9m_v3det_20231204_095047-b448804b.pth \\</span><br><span class=\"line\">        --texts <span class=\"string\">&#x27;$: coco&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>会在当前路径下生成 <code>outputs/vis/animals.png</code> 的预测结果。</p>\n<h2 id=\"一键脚本\"><a href=\"#一键脚本\" class=\"headerlink\" title=\"一键脚本\"></a>一键脚本</h2><p>将所有命令安排在一起，一键配置新启动的趋动云，就不用保存临时环境了。</p>\n<h3 id=\"提前准备\"><a href=\"#提前准备\" class=\"headerlink\" title=\"提前准备\"></a>提前准备</h3><p>在&#x2F;gemini&#x2F;code下准备<code>mmdetection.zip</code>、<code>nltk_data.zip</code>、</p>\n<p>趋动云镜像选择：<code>CUDA12.1 python==3.11</code></p>\n<p>选择模型：<code>bert-base-uncased</code>、<code>grounding_dino_swin-t</code></p>\n<h3 id=\"脚本命令\"><a href=\"#脚本命令\" class=\"headerlink\" title=\"脚本命令\"></a>脚本命令</h3><p>启动环境后，新建init.sh，复制下面的脚本，<code>chmod +x init.sh</code> 后执行<code>./init.sh</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># !/bin/bash</span></span><br><span class=\"line\">unzip mmdetection.zip</span><br><span class=\"line\">unzip nltk_data.zip -d ~/nltk_data</span><br><span class=\"line\">pip install torch==2.4.1 torchvision==0.19.1</span><br><span class=\"line\">pip install -U openmim</span><br><span class=\"line\">mim install mmengine</span><br><span class=\"line\">mim install <span class=\"string\">&quot;mmcv&gt;=2.0.0&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> mmdetection</span><br><span class=\"line\">pip install -v -e .</span><br><span class=\"line\">pip install -r requirements/multimodal.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">pip install emoji ddd-dataset </span><br><span class=\"line\"><span class=\"comment\"># 下面两个谁能安装用谁，我就两个都一起使用了</span></span><br><span class=\"line\">pip install git+https://github.com/lvis-dataset/lvis-api.git</span><br><span class=\"line\">pip install lvis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> images</span><br><span class=\"line\"><span class=\"built_in\">cd</span> images</span><br><span class=\"line\">wget https://github.com/microsoft/X-Decoder/blob/main/inference_demo/images/animals.png</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>修改一些地方的配置：</p>\n<ol>\n<li>注释<code>mmdet/__init__.py</code>的版本断言</li>\n<li>修改<code>configs/mm_grounding_dino/grounding_dino_swin-t_pretrain_obj365.py</code>中的BERT权重所在位置和注释pretrained初始化代码</li>\n<li>注释<code>mmdet/models/detector/glip.py</code>中下载nltk的代码</li>\n</ol>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python demo/image_demo.py images/animals.png \\</span><br><span class=\"line\">        configs/mm_grounding_dino/grounding_dino_swin-t_pretrain_obj365.py \\</span><br><span class=\"line\">        --weights /gemini/pretrain2/grounding_dino_swin-t_pretrain_obj365_goldg_grit9m_v3det_20231204_095047-b448804b.pth \\</span><br><span class=\"line\">        --texts <span class=\"string\">&#x27;$: coco&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>测试脚本时可能会出现找不到mmdet的情况，需要重新Build一下。</p>\n<h2 id=\"训练\"><a href=\"#训练\" class=\"headerlink\" title=\"训练\"></a>训练</h2><p>添加lora模块到BERT的自注意力层中。将mona添加到swinTransformer中(fzt)。</p>\n<h3 id=\"修改BERT\"><a href=\"#修改BERT\" class=\"headerlink\" title=\"修改BERT\"></a>修改BERT</h3><p>在<code>mmdet/models/language_models/bert.py</code>，定义修改后的BERT的自注意力层。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">LoRALayer</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, original_dim, r=<span class=\"number\">8</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.lora_A = nn.Linear(original_dim, r, bias=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.lora_B = nn.Linear(r, original_dim, bias=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        nn.init.normal_(<span class=\"variable language_\">self</span>.lora_A.weight, mean=<span class=\"number\">0</span>, std=<span class=\"number\">0.02</span>)</span><br><span class=\"line\">        nn.init.zeros_(<span class=\"variable language_\">self</span>.lora_B.weight)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">self</span>.lora_B(<span class=\"variable language_\">self</span>.lora_A(x))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改BERT的自注意力层</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">BertSelfAttentionWithLoRA</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, original_layer, r=<span class=\"number\">8</span></span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.original = original_layer</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.lora_Q = LoRALayer(original_layer.all_head_size, r)</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.lora_V = LoRALayer(original_layer.all_head_size, r)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, hidden_states, **kwargs</span>):</span><br><span class=\"line\">        original_output = <span class=\"variable language_\">self</span>.original(hidden_states, **kwargs)</span><br><span class=\"line\">        <span class=\"comment\"># 获取原始Q、V的输入，添加LoRA分支</span></span><br><span class=\"line\">        query = <span class=\"variable language_\">self</span>.lora_Q(hidden_states)</span><br><span class=\"line\">        value = <span class=\"variable language_\">self</span>.lora_V(hidden_states)</span><br><span class=\"line\">        <span class=\"comment\"># 将LoRA的输出叠加到原始输出（需根据实际结构调整）</span></span><br><span class=\"line\">        modified_output = original_output[<span class=\"number\">0</span>] + query + value</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (modified_output,) + original_output[<span class=\"number\">1</span>:]</span><br></pre></td></tr></table></figure>\n\n<p>替换原始的BERT层</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">self</span>.model = BertModel.from_pretrained(<span class=\"string\">&quot;bert-base-uncased&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> layer <span class=\"keyword\">in</span> <span class=\"variable language_\">self</span>.model.encoder.layer:</span><br><span class=\"line\">    original_attention = layer.attention.<span class=\"variable language_\">self</span></span><br><span class=\"line\">    layer.attention.<span class=\"variable language_\">self</span> = BertSelfAttentionWithLoRA(original_attention, r=<span class=\"number\">8</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"训练配置\"><a href=\"#训练配置\" class=\"headerlink\" title=\"训练配置\"></a>训练配置</h3><p>参考<code>configs/mm_grounding_dino/grounding_dino_swin-t_finetune_8xb4_20e_cat.py</code></p>\n<p>冻住BERT其余部分，只训练lora部分。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先配置的优先级高于后配置的</span></span><br><span class=\"line\">optim_wrapper = <span class=\"built_in\">dict</span>(</span><br><span class=\"line\">    optimizer=<span class=\"built_in\">dict</span>(lr=<span class=\"number\">0.0001</span>),</span><br><span class=\"line\">    paramwise_cfg=<span class=\"built_in\">dict</span>(</span><br><span class=\"line\">        custom_keys=&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;absolute_pos_embed&#x27;</span>: <span class=\"built_in\">dict</span>(decay_mult=<span class=\"number\">0.</span>),</span><br><span class=\"line\">            <span class=\"string\">&#x27;backbone&#x27;</span>: <span class=\"built_in\">dict</span>(lr_mult=<span class=\"number\">0.0</span>),</span><br><span class=\"line\">            <span class=\"string\">&#x27;language_model.lora_A&#x27;</span>: <span class=\"built_in\">dict</span>(lr_mult=<span class=\"number\">1.0</span>),</span><br><span class=\"line\">            <span class=\"string\">&#x27;language_model.lora_B&#x27;</span>: <span class=\"built_in\">dict</span>(lr_mult=<span class=\"number\">1.0</span>),</span><br><span class=\"line\">            <span class=\"string\">&#x27;language_model.*&#x27;</span>: <span class=\"built_in\">dict</span>(lr_mult=<span class=\"number\">0.0</span>),</span><br><span class=\"line\">        &#125;))</span><br></pre></td></tr></table></figure>\n\n<p>修改数据集的位置。修改文件执行权限<code>chmod +x ./tools/dist_train.sh</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./tools/dist_train.sh configs/mm_grounding_dino/grounding_dino_swin-t_finetune_8xb4_20e_sku.py 1 --work-dir sku_work_dir</span><br></pre></td></tr></table></figure>\n\n<p>遇到Windows的换行符的问题处理方法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用dos2unix </span></span><br><span class=\"line\">apt update</span><br><span class=\"line\">apt insatall dos2unix </span><br><span class=\"line\">dos2unix ./tools/dist_train.sh</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","text":"在没有服务器时使用驱动云进行模型选择。 配置环境两个一样的文档： mmdetection官方参考连接 、github文档 趋动云镜像趋动云镜像 CUDA12.1...","permalink":"/post/mm-groundingdino-趋动云","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">配置环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B6%8B%E5%8A%A8%E4%BA%91%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">趋动云镜像</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85MMDetection-%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">安装MMDetection 环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81MMDetection-%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">验证MMDetection 环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85grounding-dino%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">安装grounding_dino环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87BERT%E6%9D%83%E9%87%8D\"><span class=\"toc-text\">准备BERT权重</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87NLTK-%E6%9D%83%E9%87%8D\"><span class=\"toc-text\">准备NLTK 权重</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E7%90%86%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">推理测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">一键脚本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%90%E5%89%8D%E5%87%86%E5%A4%87\"><span class=\"toc-text\">提前准备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">脚本命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%AD%E7%BB%83\"><span class=\"toc-text\">训练</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9BERT\"><span class=\"toc-text\">修改BERT</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%AD%E7%BB%83%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">训练配置</span></a></li></ol></li></ol>","author":{"name":"kky","slug":"blog-author","avatar":"static/img/1739986420982.jpg","link":"/","description":"It's my first blog website. I will write some experience of my post-graduate life. I hope you like it!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2025-04-17T14:59:40.537Z","updated":"2025-04-17T17:05:32.491Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":444,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"kky","slug":"blog-author","avatar":"static/img/1739986420982.jpg","link":"/","description":"It's my first blog website. I will write some experience of my post-graduate life. I hope you like it!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}